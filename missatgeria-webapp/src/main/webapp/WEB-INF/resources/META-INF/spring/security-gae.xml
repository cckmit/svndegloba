<?xml version="1.0" encoding="UTF-8"?>

<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


	<http pattern="/_ah/**" security="none" />
	<http pattern="/static/**" security="none" />
	<http pattern="/favicon.ico" security="none" />
	<http pattern="/loggedout.htm" security="none" />
	<http pattern="/disabled.htm" security="none" />
	<http pattern="/*/javax.faces.resource/**" security="none" />

	<http use-expressions="true" entry-point-ref="gaeEntryPoint">
		<intercept-url pattern="/gae/" access="permitAll" />
		<intercept-url pattern="/gae/logout.htm"
			access="permitAll" />
		<intercept-url pattern="/gae/register.htm*"
			access="hasRole('NEW_USER')" />
		<intercept-url pattern="/gae/**"
			access="hasRole('USER')" />
		<custom-filter position="PRE_AUTH_FILTER"
			ref="gaeFilter" />
		<!-- <csrf disabled="true" /> -->
	</http>

	<b:bean id="gaeEntryPoint"
		class="com.degloba.security.spring.gae.security.GoogleAccountsAuthenticationEntryPoint" />

	<b:bean id="gaeFilter"
		class="com.degloba.security.spring.gae.security.GaeAuthenticationFilter">
		<b:property name="authenticationManager"
			ref="authenticationManager" />
		<b:property name="failureHandler">
			<b:bean
				class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
				<b:property name="exceptionMappings">
					<b:map>
						<b:entry
							key="org.springframework.security.authentication.DisabledException"
							value="/disabled.htm" />
					</b:map>
				</b:property>
			</b:bean>
		</b:property>
	</b:bean>

	<authentication-manager
		alias="authenticationManager">
		<authentication-provider
			ref="gaeAuthenticationProvider" />
	</authentication-manager>


	<!-- <b:alias name="filterChainProxy" alias="springSecurityFilterChain"/> 
		<b:bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy"> 
		<b:constructor-arg> <b:list> <filter-chain pattern="/restful/**" filters="securityContextPersistenceFilterWithASCFalse, 
		basicAuthenticationFilter, exceptionTranslationFilter, filterSecurityInterceptor" 
		/> <filter-chain pattern="/**" filters="securityContextPersistenceFilterWithASCTrue" 
		/> </b:list> <b:list> <filter-chain pattern="/restful/**" filters="securityContextPersistenceFilterWithASCFalse" 
		/> <filter-chain pattern="/**" filters="securityContextPersistenceFilterWithASCTrue, 
		gaeFilter,exceptionTranslationFilter,filterSecurityInterceptor" /> </b:list> 
		</b:constructor-arg> </b:bean> -->


	<!-- <b:bean id="securityContextPersistenceFilterWithASCFalse" class="org.springframework.security.web.context.SecurityContextPersistenceFilter"> 
		<b:constructor-arg ref="securityContextRepositoryWithASCFalse"/> </b:bean> 
		<b:bean id="securityContextRepositoryWithASCFalse" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository"> 
		<b:property name='allowSessionCreation' value='false' /> </b:bean> <b:bean 
		id="securityContextPersistenceFilterWithASCTrue" class="org.springframework.security.web.context.SecurityContextPersistenceFilter"> 
		<b:constructor-arg ref="securityContextRepositoryWithASCTrue"/> </b:bean> 
		<b:bean id="securityContextRepositoryWithASCTrue" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository"> 
		<b:property name='allowSessionCreation' value='true' /> </b:bean> <b:bean 
		id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter"> 
		<b:constructor-arg ref="gaeEntryPoint"/> <b:constructor-arg ref="requestCache"/> 
		</b:bean> <b:bean id="accessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl"> 
		<b:property name="errorPage" value="/accessDenied.htm"/> </b:bean> <b:bean 
		id="requestCache" class="org.springframework.security.web.savedrequest.HttpSessionRequestCache"/> -->
	<!-- <b:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor"> 
		<b:property name="authenticationManager" ref="authenticationManager"/> <b:property 
		name="accessDecisionManager" ref="accessDecisionManager"/> <b:property name="securityMetadataSource"> 
		<filter-security-metadata-source use-expressions="true"> <intercept-url pattern="/" 
		access="isAuthenticated()" /> <intercept-url pattern="/logout.htm" access="isAuthenticated()" 
		/> <intercept-url pattern="/register.htm*" access="isAuthenticated()" /> 
		<intercept-url pattern="/**" access="hasRole('USER')" /> <intercept-url pattern="/*/javax.faces.resource/**" 
		access="permitAll" /> </filter-security-metadata-source> </b:property> </b:bean> -->

	<!-- <b:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased"> 
		<b:constructor-arg> <b:list> <b:bean class="org.springframework.security.access.vote.RoleVoter" 
		/> <b:bean class="org.springframework.security.access.vote.AuthenticatedVoter" 
		/> </b:list> </b:constructor-arg> </b:bean> -->

	<!-- <b:bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"> 
		<b:property name="targetClass" value="org.springframework.security.core.context.SecurityContextHolder"/> 
		<b:property name="targetMethod" value="setStrategyName"/> <b:property name="arguments" 
		value="MODE_INHERITABLETHREADLOCAL"/> </b:bean> -->

	<!-- <b:bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"> 
		<b:property name="targetClass" value="org.springframework.security.web.context.SecurityContextPersistenceFilter"/> 
		<b:property name="targetMethod" value="setForceEagerSessionCreation"/> <b:property 
		name="arguments" value="true"/> </b:bean> -->


</b:beans>
