<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
                                 http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
  version="2.1">

 	<persistence-unit name="transactions-optional" transaction-type="RESOURCE_LOCAL">        
		<provider>org.datanucleus.api.jpa.PersistenceProviderImpl</provider>
		<class>com.degloba.persistence.test.domain.Dictionary</class>
        <class>com.degloba.persistence.test.domain.DictionaryCategory</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
		<properties>   
			<property name="datanucleus.ConnectionURL" value="appengine"/>
		    
		    <!-- Whether to allow nontransactional reads -->    
			<property name="datanucleus.NontransactionalRead" value="true"/>   
			
			<!-- Whether to allow nontransactional writes -->         
			<property name="datanucleus.NontransactionalWrite" value="true"/>            
			  			
 			<property name="datanucleus.appengine.datastoreEnableXGTransactions" value="true"/>	
 			
 			<!-- Whether to only allow a singleton EMF for persistence-unit. 
 			If a subsequent request is made for an EMF with a name that already exists then a warning 
 			will be logged and the original EMF returned. -->
			<property name="datanucleus.singletonEMFForName" value="true"/>	 
							      
		</properties>    
	</persistence-unit>
	
	<persistence-unit name="originalStorageVersion" transaction-type="RESOURCE_LOCAL">
        <provider>org.datanucleus.api.jpa.PersistenceProviderImpl</provider>
        <properties>
            <property name="datanucleus.ConnectionURL" value="appengine"/>
            
            <property name="datanucleus.metadata.allowLoadAtRuntime" value="true"/>
            <property name="datanucleus.appengine.ignorableMetaDataBehavior" value="ERROR"/>
            
            <!-- Name of the type of Level 2 Cache to use. 
            Can be used to interface with external caching products. 
            Use "none" to turn off L2 caching. See also Cache docs for JDO, and for JPA -->
			<property name="datanucleus.cache.level2.type" value="None"/>
			
			<!-- When a user invokes a nontransactional operation they can choose for these changes to go straight to the datastore (atomically) 
			or to wait until either the next transaction commit, or close of the PM/EM. 
			Disable this if you want operations to be processed with the next real transaction. -->
            <property name="datanucleus.nontx.atomic" value="true"/>
            
            <property name="datanucleus.appengine.storageVersion" value="PARENTS_DO_NOT_REFER_TO_CHILDREN"/>
        </properties>
    </persistence-unit>

    <persistence-unit name="transactional_ds_non_transactional_ops_not_allowed">
        <provider>org.datanucleus.api.jpa.PersistenceProviderImpl</provider>
        <properties>
            <property name="datanucleus.ConnectionURL" value="appengine"/>
            
            <property name="datanucleus.metadata.allowLoadAtRuntime" value="true"/>
            <property name="datanucleus.appengine.ignorableMetaDataBehavior" value="ERROR"/>
			<property name="datanucleus.cache.level2.type" value="None"/>
			
            <property name="datanucleus.nontx.atomic" value="true"/>
        </properties>
    </persistence-unit>

    <persistence-unit name="transactional_ds_non_transactional_ops_allowed">
        <provider>org.datanucleus.api.jpa.PersistenceProviderImpl</provider>
        <properties>
            <property name="datanucleus.ConnectionURL" value="appengine"/>
            
            <property name="datanucleus.NontransactionalRead" value="true"/>
            <property name="datanucleus.NontransactionalWrite" value="true"/>
            
            <property name="datanucleus.metadata.allowLoadAtRuntime" value="true"/>
            <property name="datanucleus.appengine.ignorableMetaDataBehavior" value="ERROR"/>
            
			<property name="datanucleus.cache.level2.type" value="None"/>
			
            <property name="datanucleus.nontx.atomic" value="true"/>
        </properties>
    </persistence-unit>

	<!-- es el que s'utilitza en hardCode -->
    <persistence-unit name="nontransactional_ds_non_transactional_ops_not_allowed" transaction-type="RESOURCE_LOCAL">
        <provider>org.datanucleus.api.jpa.PersistenceProviderImpl</provider>
        <properties>
            <property name="datanucleus.ConnectionURL" value="appengine"/>

            <property name="datanucleus.appengine.autoCreateDatastoreTxns" value="false"/>
            
            <property name="datanucleus.metadata.allowLoadAtRuntime" value="true"/>
            <property name="datanucleus.appengine.ignorableMetaDataBehavior" value="ERROR"/>
            
			<property name="datanucleus.cache.level2.type" value="None"/>

            <property name="datanucleus.nontx.atomic" value="true"/>
        </properties>
    </persistence-unit>

    <persistence-unit name="nontransactional_ds_non_transactional_ops_allowed">
        <provider>org.datanucleus.api.jpa.PersistenceProviderImpl</provider>
        <properties>
            <property name="datanucleus.ConnectionURL" value="appengine"/>
            
            <property name="datanucleus.NontransactionalRead" value="true"/>
            <property name="datanucleus.NontransactionalWrite" value="true"/>

            <property name="datanucleus.appengine.autoCreateDatastoreTxns" value="false"/>
            
            <property name="datanucleus.metadata.allowLoadAtRuntime" value="true"/>
            <property name="datanucleus.appengine.ignorableMetaDataBehavior" value="ERROR"/>
            
			<property name="datanucleus.cache.level2.type" value="None"/>
			
            <property name="datanucleus.nontx.atomic" value="true"/>
        </properties>
    </persistence-unit>

    <persistence-unit name="nontransactional_ds_non_transactional_ops_allowed_singleton">
        <provider>org.datanucleus.api.jpa.PersistenceProviderImpl</provider>
        <properties>
            <property name="datanucleus.ConnectionURL" value="appengine"/>
            
            <property name="datanucleus.NontransactionalRead" value="true"/>
            <property name="datanucleus.NontransactionalWrite" value="true"/>
            
            <property name="datanucleus.singletonEMFForName" value="true"/>
            
            <property name="datanucleus.appengine.autoCreateDatastoreTxns" value="false"/>
            
            <property name="datanucleus.metadata.allowLoadAtRuntime" value="true"/>
            <property name="datanucleus.appengine.ignorableMetaDataBehavior" value="ERROR"/>
            
			<property name="datanucleus.cache.level2.type" value="None"/>
			
            <property name="datanucleus.nontx.atomic" value="true"/>
        </properties>
    </persistence-unit>

    <persistence-unit name="datastoreserviceconfigprops">
        <provider>org.datanucleus.api.jpa.PersistenceProviderImpl</provider>
        <properties>
            <property name="datanucleus.ConnectionURL" value="appengine"/>
            
            <property name="datanucleus.NontransactionalRead" value="true"/>
            <property name="datanucleus.NontransactionalWrite" value="true"/>
            
            <property name="datanucleus.datastoreReadTimeout" value="5000"/>
            <property name="datanucleus.datastoreWriteTimeout" value="10000"/>
            
            <property name="datanucleus.appengine.datastoreReadConsistency" value="EVENTUAL"/>
            
			<property name="datanucleus.cache.level2.type" value="None"/>
			
            <property name="datanucleus.nontx.atomic" value="true"/>
        </properties>
    </persistence-unit>

    <persistence-unit name="allowXGTxns">
        <provider>org.datanucleus.api.jpa.PersistenceProviderImpl</provider>
        <properties>
        	<property name="datanucleus.ConnectionURL" value="appengine"/>
        
            <property name="datanucleus.NontransactionalRead" value="true"/>
            <property name="datanucleus.NontransactionalWrite" value="true"/>
            
            <property name="datanucleus.nontx.atomic" value="true"/>
            <property name="datanucleus.appengine.datastoreEnableXGTransactions" value="true"/>
        </properties>
    </persistence-unit>

    <persistence-unit name="disallowXGTxns">
        <provider>org.datanucleus.api.jpa.PersistenceProviderImpl</provider>
        <properties>
        	<property name="datanucleus.ConnectionURL" value="appengine"/>
        	
            <property name="datanucleus.NontransactionalRead" value="true"/>
            <property name="datanucleus.NontransactionalWrite" value="true"/>
            
            <property name="datanucleus.nontx.atomic" value="true"/>
            
            <property name="datanucleus.appengine.datastoreEnableXGTransactions" value="false"/>
        </properties>
    </persistence-unit>	
	
             
   <!--  <persistence-unit name="default" transaction-type="RESOURCE_LOCAL">
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <jta-data-source>jdbc/testDS</jta-data-source>
        <class>com.degloba.persistence.test.domain.Dictionary</class>
        <class>com.degloba.persistence.test.domain.DictionaryCategory</class>
        <properties>
            Auto detect annotation model classes
            <property name="hibernate.archive.autodetection" value="class" />
            <property name="hibernate.hbm2ddl.auto" value="update"/>
            <property name="hibernate.dialect" value="${hibernate.dialect}"/>
            <property name="hibernate.jndi.class" value="bitronix.tm.jndi.BitronixInitialContextFactory"/>
            <property name="hibernate.transaction.factory_class" value="org.hibernate.engine.transaction.internal.jta.JtaTransactionFactory"/>
            <property name="hibernate.transaction.jta.platform" value="org.hibernate.service.jta.platform.internal.BitronixJtaPlatform"/>
            
   <property name="hibernate.connection.release_mode" value="after_statement"/>
           <property name="hibernate.transaction.factory_class" value="org.hibernate.transaction.JTATransactionFactory"/>
   <property name="hibernate.current_session_context_class" value="jta"/>
           
        </properties>
    </persistence-unit> -->
</persistence>
