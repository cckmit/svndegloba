<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.2.xsd">
           
           
	<!-- CONFIGURACIO 1 : -->
	<!-- 
	<security:http auto-config="true" use-expressions="true">
		<security:form-login login-page="/app/login" login-processing-url="/app/j_spring_security_check" 
			default-target-url="/app/home" authentication-failure-url="/app/login?login_error=1" />
		<security:logout logout-url="/app/logout" logout-success-url="/app/home" />
		<security:intercept-url pattern="/secured/appleUser" method="POST" access="hasRole('ROLE_APPLE_USER')" />
		<security:intercept-url pattern="/secured/androidUser" method="POST" access="hasRole('ROLE_ANDROID_USER')" />			
	</security:http>  -->
	
	
	<!-- de la web spring-travel -->
	<!--  <security:http>
        Authentication policy
        <security:form-login login-page="/users/login" login-processing-url="/users/login/authenticate" default-target-url="/hotels" authentication-failure-url="/users/login?login_error=1"/>
        <security:logout logout-url="/users/logout" logout-success-url="/users/logoutSuccess"/>
    </security:http>
 -->

	<!--
		Define local authentication provider, a real app would use an external provider (JDBC, LDAP, CAS, etc)
		
		usernames/passwords are:
			joe/joe1
			pete/pete1
	-->
	<!-- <security:authentication-manager>
		<security:authentication-provider>
			<security:password-encoder hash="md5" />
			<security:user-service>
				<security:user name="joe" password="bf403351dfb2ae819874163aff25a49c" 
					authorities="ROLE_USER, ROLE_APPLE_USER" />
				<security:user name="pete" password="5d2ea1f70185e4357183bb9c00187219" 
					authorities="ROLE_USER, ROLE_ANDROID_USER" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>	
 -->


	<!-- de la web spring-travel -->
   <!--  <security:authentication-manager>
        <security:authentication-provider>
            <security:password-encoder hash="md5"/>
            <security:user-service>
                <security:user name="keith" password="417c7382b16c395bc25b5da1398cf076" authorities="ROLE_USER, ROLE_SUPERVISOR"/>
                <security:user name="erwin" password="12430911a8af075c6f41c6976af22b09" authorities="ROLE_USER, ROLE_SUPERVISOR"/>
                <security:user name="jeremy" password="57c6cbff0d421449be820763f03139eb" authorities="ROLE_USER"/>
                <security:user name="scott" password="942f2339bf50796de535a384f0d1af3e" authorities="ROLE_USER"/>
                <security:user name="josh" password="c9089f3c9adaf0186f6ffb1ee8d6501c" authorities="ROLE_USER"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>
 -->


<!-- CONFIGURACIO 2 :  Integrar el login de Google en tu App con OAuth2 y Spring Security -->
<!-- ************************************************************************************ -->
<!--  http://www.adictosaltrabajo.com/tutoriales/spring-security-o-auth-google/ 
529425111572-7d84aa90nt1b89sdrjt1ceq1dckjek97.apps.googleusercontent.com-->
<!-- ************************************************************************************ -->

	<bean id="google2ProviderForWebClient" class="org.scribe.up.provider.impl.Google2Provider">
<!--         <property name="key" value="529425111572-7d84aa90nt1b89sdrjt1ceq1dckjek97.apps.googleusercontent.com"/>  -->  <!--  {pon aqui el Client ID creado en la consola de Google API (en el punto 1)} -->
        <property name="key" value="910109996901-910v5uqubvse82fu2vqrblck9nhnhocb.apps.googleusercontent.com"/> 
        <!-- <property name="secret" value="BupeTdv74Z2MoZqb3_SZktrx"/>   --> <!-- {secret Key de la consola de Google API}"  santasusanap -->
        <property name="secret" value="p1Fc6moFKqvD-XSU9J4U04tS"/>   <!-- {secret Key de la consola de Google API}"  degloba -->
        <property name="scope" value="EMAIL_AND_PROFILE"/>
    </bean>
 
    <bean id="providersDefinition" class="org.scribe.up.provider.ProvidersDefinition">
        <property name="baseUrl" value="http://localhost:8888/app/j_spring_oauth_security_check" />
        <property name="providers">
            <list>
                <ref bean="google2ProviderForWebClient" />
            </list>
        </property>
    </bean>
 
    <bean id="oAuthProvider" class="com.github.leleuj.ss.oauth.client.authentication.OAuthAuthenticationProvider">
        <property name="providersDefinition" ref="providersDefinition" />
    </bean>
 
    <bean id="google2EntryPoint" class="com.github.leleuj.ss.oauth.client.web.OAuthAuthenticationEntryPoint">
        <property name="provider" ref="google2ProviderForWebClient" />
    </bean>
 
    
    <bean id="oAuthFilter" class="com.github.leleuj.ss.oauth.client.web.OAuthAuthenticationFilter">
        <property name="providersDefinition" ref="providersDefinition" />
        <property name="authenticationManager" ref="authenticationManager" />
    </bean>
    
	<security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="oAuthProvider"/>
    </security:authentication-manager>
           
	<security:http entry-point-ref="google2EntryPoint">
		<security:custom-filter after="CAS_FILTER" ref="oAuthFilter" />		
		<!-- <security:intercept-url pattern="/secured/appleUser" method="POST" access="hasRole('ROLE_APPLE_USER')" />
		<security:intercept-url pattern="/secured/androidUser" method="POST" access="hasRole('ROLE_ANDROID_USER')" /> -->
		
        <security:intercept-url pattern="/app/userHome" access="IS_AUTHENTICATED_FULLY" />
        <security:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:logout />
    </security:http>


<!-- ***************************
**   Client Android Oauth2   *** 
**************************** -->

<!-- <bean id="google2ProviderForAndroidClient" class="org.scribe.up.provider.impl.Google2Provider">
        <property name="key" value="529425111572-7d84aa90nt1b89sdrjt1ceq1dckjek97.apps.googleusercontent.com"/>    {pon aqui el Client ID creado en la consola de Google API (en el punto 1)}
        <property name="secret" value="BupeTdv74Z2MoZqb3_SZktrx"/>   {secret Key de la consola de Google API}"
        <property name="scope" value="EMAIL_AND_PROFILE"/>
    </bean>
 
    <bean id="providersDefinitionForAndroidClient" class="org.scribe.up.provider.ProvidersDefinition">
        <property name="baseUrl" value="http://localhost:8888/j_spring_oauth_security_check" />
        <property name="providers">
            <list>
                <ref bean="google2ProviderForAndroidClient" />
            </list>
        </property>
    </bean>
 
    <bean id="oAuthProviderForAndroidClient" class="com.github.leleuj.ss.oauth.client.authentication.OAuthAuthenticationProvider">
        <property name="providersDefinition" ref="providersDefinitionForAndroidClient" />
    </bean>
 
    <bean id="google2EntryPointForAndroidClient" class="com.github.leleuj.ss.oauth.client.web.OAuthAuthenticationEntryPoint">
        <property name="provider" ref="google2ProviderForAndroidClient" />
    </bean>
 
    
    <bean id="oAuthFilterForAndroidClient" class="com.github.leleuj.ss.oauth.client.web.OAuthAuthenticationFilter">
        <property name="providersDefinition" ref="providersDefinitionForAndroidClient" />
        <property name="authenticationManager" ref="authenticationManagerForAndroidClient" />
    </bean>
    
	<security:authentication-manager alias="authenticationManagerForAndroidClient">
        <security:authentication-provider ref="oAuthProviderForAndroidClient"/>
    </security:authentication-manager>
           
	<security:http entry-point-ref="google2EntryPointForAndroidClient">
		<security:form-login login-page="/app/login" login-processing-url="/app/j_spring_security_check" 
			default-target-url="/app/home" authentication-failure-url="/app/login?login_error=1" />
        <security:custom-filter after="CAS_FILTER" ref="oAuthFilterForAndroidClient" />
		<security:logout logout-url="/app/logout" logout-success-url="/app/home" />
	</security:http> -->
</beans>