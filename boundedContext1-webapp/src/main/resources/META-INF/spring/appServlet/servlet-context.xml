<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:faces="http://www.springframework.org/schema/faces"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:wf="http://www.springframework.org/schema/webflow-config"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/faces http://www.springframework.org/schema/faces/spring-faces-2.4.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd		
		http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd">

	<!--
		DispatcherServlet Context: defines this servlet's request-processing infrastructure
	-->

	<!-- Imports user-defined @Controller beans that process client requests -->
	<import resource="controllers.xml" />
	<import resource="webflow.xml" />

	<!-- Scan for Spring beans declared via annotations. -->
	<context:component-scan base-package="com.degloba.organisation.ui.webui.spring.webflow"/>

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- 
		Enable serving of classpath with Spring 3 resource serving mechanism. For example:
		/webflow-primefaces-showcase/app/resources/styles/blueprint/print.css
	-->
	<mvc:resources location="/" mapping="/resources/**" />

	<!-- 
		Enable processing of JSF 2 resource requests. For example:
		/webflow-primefaces-showcase/app/javax.faces.resource/jsf.js?ln=javax.faces
	-->
	<faces:resources />

	<!--
		Maps request paths to flows in the flowRegistry; e.g. a path of
		/hotels/booking looks for a flow with id "hotels/booking"
	-->
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
		<property name="flowRegistry" ref="flowRegistry" />
	</bean>

	<!--
		Resolves views selected for rendering by @Controllers to .xhtml
		resources in the /WEB-INF/views directory
	-->
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.faces.mvc.JsfView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".xhtml" />
	</bean>

	<!--
		Dispatches requests mapped to flows to FlowHandler implementations
	-->
	<bean class="org.springframework.faces.webflow.JsfFlowHandlerAdapter">
		<property name="flowExecutor" ref="flowExecutor" />
	</bean>
	
<!-- ********************************************************************************** -->
<!--  Travel -->

 <!-- Configures the Spring MVC @Controller programming model -->
  <!--   <mvc:annotation-driven/> -->
    
 <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
  <!--   <mvc:resources mapping="/resources/**" location="/resources/"/> -->

 <!-- Configures a handler for serving static resources by forwarding to the Servlet container's default Servlet. -->
    <!-- <mvc:default-servlet-handler/> -->
    
   <!-- Executes flows: the entry point into the Spring Web Flow system -->
   <!--  <wf:flow-executor id="flowExecutor">
        <wf:flow-execution-listeners>
            <wf:listener ref="jpaFlowExecutionListener"/>
            <wf:listener ref="securityFlowExecutionListener"/>
        </wf:flow-execution-listeners>
    </wf:flow-executor> -->

    <!-- The registry of executable flow definitions -->
    <!-- <wf:flow-registry id="flowRegistry" flow-builder-services="flowBuilderServices" base-path="/WEB-INF/views">
        <wf:flow-location-pattern value="/**/*-flow.xml"/>
    </wf:flow-registry> -->
    
  <!-- Plugs in a custom creator for Web Flow views -->
   <!--  <wf:flow-builder-services id="flowBuilderServices" view-factory-creator="viewFactoryCreator" development="true"/> -->
    
 <!-- Configures transaction management around @Transactional components -->

    <!-- Imports the application controllers that process client requests -->
  <!--   <mvc:view-controller path="/" view-name="home"/> -->
    
 <!-- Maps '/users/login' requests to the 'users/login' view -->
  <!--   <mvc:view-controller path="/users/login"/>
    <mvc:view-controller path="/users/logout"/>
    <mvc:view-controller path="/users/logoutSuccess"/> -->
<!-- ********************************************************************************** -->
</beans>